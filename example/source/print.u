//! Serial print implementation

use source/hardware.u as hardware;
use deps/print_format.u;

u8 print_buffer[1024];

// Prints a formatted string onto the serial port. This will do a blocking write until all
// all the data has been shifted out on the port
pub func print(const char* data, ...) {

    // Format the buffer
    u32 size = print_format(data, print_buffer, ...);

    // Get a pointer to the hardware
    hardware::Uart_reg* regs = hardware::UART_REG;

    for ; *data; data++ {
        // Wait for the last character to be transmitted onto the line
        while regs->sr.bit[5] == 0;
        regs->send.bit[8..15] = *data;
    }
}
